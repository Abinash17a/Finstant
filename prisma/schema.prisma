generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id             String         @id(map: "User_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name     String?        @db.VarChar(50)
  last_name      String?        @db.VarChar(50)
  email          String?        @unique(map: "User_email_key") @db.VarChar(100)
  phone_number   String?        @db.VarChar(20)
  password_hash  String?
  avatar_url     String?
  base_salary    Decimal?
  monthly_budget Decimal?
  position       String?        @db.VarChar(100)
  date_joined    DateTime?
  is_active      Boolean        @default(true)
  address        String?
  zip_code       String?        @db.VarChar(20)
  country        String?        @db.VarChar(50)
  birthdate      DateTime?
  created_at     DateTime       @default(now())
  updated_at     DateTime       @default(now())
  transactions   transactions[]

  @@map("users")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model transactions {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String    @db.Uuid
  type           String
  amount         Decimal   @db.Decimal
  category       String
  description    String?
  date           DateTime? @default(now()) @db.Timestamp(6)
  payment_method String
  location       String?
  tags           String?
  sub_category   String
  user           user      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@map("transactions")
}

enum TransactionCategory {
  FOOD_DINING
  TRANSPORTATION
  SHOPPING
  ENTERTAINMENT
  BILLS_UTILITIES
  HEALTHCARE
  SALARY
  OTHER
}

enum TransactionType {
  INCOME
  EXPENSE
}
